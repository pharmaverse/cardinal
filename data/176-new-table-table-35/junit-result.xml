<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="fda-table_02" timestamp="2023-12-21T12:52:37Z" hostname="4e10f7e1a45f" tests="30" skipped="10" failures="0" errors="0" time="11.295">
    <testcase time="0.185" classname="fda_table_02" name="Table_02_generation_works_with_default_values"/>
    <testcase time="0.382" classname="fda_table_02" name="Table_02_generation_works_with_default_values"/>
    <testcase time="0.191" classname="fda_table_02" name="Table_02_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:16:3')"/>
    </testcase>
    <testcase time="0.0529999999999999" classname="fda_table_02" name="Table_02_generation_works_with_custom_values"/>
    <testcase time="0.275" classname="fda_table_02" name="Table_02_generation_works_with_custom_values"/>
    <testcase time="0.205" classname="fda_table_02" name="Table_02_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:45:3')"/>
    </testcase>
    <testcase time="0.0419999999999998" classname="fda_table_02" name="Table_02_generation_works_with_some_NA_values"/>
    <testcase time="0.0670000000000002" classname="fda_table_02" name="Table_02_generation_works_with_some_NA_values"/>
    <testcase time="0.04" classname="fda_table_02" name="Table_02_generation_works_with_some_NA_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:57:3')"/>
    </testcase>
    <testcase time="0.0139999999999998" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_default_values"/>
    <testcase time="1.152" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_default_values"/>
    <testcase time="0.024" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:66:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_tplyr_raw_TRUE"/>
    <testcase time="0.59" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_tplyr_raw_TRUE"/>
    <testcase time="0.0170000000000003" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_tplyr_raw_TRUE">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:75:3')"/>
    </testcase>
    <testcase time="0.0330000000000004" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_custom_values"/>
    <testcase time="1.148" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_custom_values"/>
    <testcase time="0.0170000000000003" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:102:3')"/>
    </testcase>
    <testcase time="0.0270000000000001" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_some_NA_values"/>
    <testcase time="0.472" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_some_NA_values"/>
    <testcase time="0.016" classname="fda_table_02" name="Table_02_generation_tplyr_works_with_some_NA_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:119:3')"/>
    </testcase>
    <testcase time="0.0140000000000002" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_default_values"/>
    <testcase time="2.573" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_default_values"/>
    <testcase time="0.00699999999999967" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:128:3')"/>
    </testcase>
    <testcase time="0.032" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_custom_values"/>
    <testcase time="2.592" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_custom_values"/>
    <testcase time="0.00699999999999967" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:146:3')"/>
    </testcase>
    <testcase time="0.0310000000000006" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_some_NA_values"/>
    <testcase time="1.07" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_some_NA_values"/>
    <testcase time="0.00499999999999901" classname="fda_table_02" name="Table_02_generation_gtsum_works_with_some_NA_values">
      <skipped message="Reason: On CRAN ('test-fda-table_02.R:160:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_03" timestamp="2023-12-21T12:52:48Z" hostname="4e10f7e1a45f" tests="8" skipped="2" failures="0" errors="0" time="0.588">
    <testcase time="0.027000000000001" classname="fda_table_03" name="Table_3_generation_works_with_default_values"/>
    <testcase time="0.000999999999999446" classname="fda_table_03" name="Table_3_generation_works_with_default_values"/>
    <testcase time="0.215" classname="fda_table_03" name="Table_3_generation_works_with_default_values"/>
    <testcase time="0.0489999999999995" classname="fda_table_03" name="Table_3_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_03.R:21:3')"/>
    </testcase>
    <testcase time="0.0140000000000011" classname="fda_table_03" name="Table_3_generation_works_with_custom_values"/>
    <testcase time="0.000999999999999446" classname="fda_table_03" name="Table_3_generation_works_with_custom_values"/>
    <testcase time="0.223000000000001" classname="fda_table_03" name="Table_3_generation_works_with_custom_values"/>
    <testcase time="0.0579999999999998" classname="fda_table_03" name="Table_3_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_03.R:41:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_04" timestamp="2023-12-21T12:52:49Z" hostname="4e10f7e1a45f" tests="9" skipped="2" failures="0" errors="0" time="0.613">
    <testcase time="0.0309999999999988" classname="fda_table_04" name="Table_04_generation_works_with_default_values"/>
    <testcase time="0.201000000000001" classname="fda_table_04" name="Table_04_generation_works_with_default_values"/>
    <testcase time="0.0739999999999998" classname="fda_table_04" name="Table_04_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_04.R:18:3')"/>
    </testcase>
    <testcase time="0.0140000000000011" classname="fda_table_04" name="Table_04_generation_works_with_custom_values"/>
    <testcase time="0.000999999999999446" classname="fda_table_04" name="Table_04_generation_works_with_custom_values"/>
    <testcase time="0.000999999999999446" classname="fda_table_04" name="Table_04_generation_works_with_custom_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_04" name="Table_04_generation_works_with_custom_values"/>
    <testcase time="0.223999999999998" classname="fda_table_04" name="Table_04_generation_works_with_custom_values"/>
    <testcase time="0.0660000000000007" classname="fda_table_04" name="Table_04_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_04.R:46:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_05" timestamp="2023-12-21T12:52:50Z" hostname="4e10f7e1a45f" tests="11" skipped="3" failures="0" errors="1" time="0.865">
    <testcase time="0.131" classname="fda_table_05" name="Table_05_generation_works_with_default_values"/>
    <testcase time="0.146000000000001" classname="fda_table_05" name="Table_05_generation_works_with_default_values"/>
    <testcase time="0.0659999999999989" classname="fda_table_05" name="Table_05_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_05.R:10:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_05" name="Table_05_generation_works_with_custom_values"/>
    <testcase time="0.163" classname="fda_table_05" name="Table_05_generation_works_with_custom_values"/>
    <testcase time="0.0709999999999997" classname="fda_table_05" name="Table_05_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_05.R:34:3')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="fda_table_05" name="Table_05_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.138" classname="fda_table_05" name="Table_05_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0600000000000005" classname="fda_table_05" name="Table_05_generation_works_with_NA_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_05.R:44:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_05" name="Table_05_generation_works_with_risk_difference_column"/>
    <testcase time="0.0470000000000006" classname="fda_table_05" name="Table_05_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_05.R:54:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_05(adsl, risk_diff = risk_diff) at test-fda-table_05.R:54:3
  2. | \-... %&gt;% append_topleft(c("", "Parameter"))
  3. +-rtables::append_topleft(., c("", "Parameter"))
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_patients_with_flags(...)
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-rtables::split_rows_by(., "DUR_LBL")
 11. | \-rtables:::next_rpos(lyt, nested)
 12. +-rtables::analyze(...)
 13. | +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 14. | \-rtables:::last_rowsplit(lyt)
 15. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 16. | \-tern::add_riskdiff(...)
 17. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 18. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 19. |       \-checkmate:::mstop(...)
 20. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 21. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 22. +-base::.handleSimpleError(...)
 23. | \-base (local) h(simpleError(msg, call))
 24. \-base::.handleSimpleError(...)
 25.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_06" timestamp="2023-12-21T12:52:50Z" hostname="4e10f7e1a45f" tests="14" skipped="2" failures="0" errors="1" time="1.228">
    <testcase time="0.130000000000001" classname="fda_table_06" name="Table_06_generation_works_with_default_values"/>
    <testcase time="0.000999999999999446" classname="fda_table_06" name="Table_06_generation_works_with_default_values"/>
    <testcase time="0.0359999999999996" classname="fda_table_06" name="Table_06_generation_works_with_default_values"/>
    <testcase time="0.308" classname="fda_table_06" name="Table_06_generation_works_with_default_values"/>
    <testcase time="0.0820000000000007" classname="fda_table_06" name="Table_06_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_06.R:8:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_06" name="Table_06_generation_works_with_custom_values"/>
    <testcase time="0.00200000000000067" classname="fda_table_06" name="Table_06_generation_works_with_custom_values"/>
    <testcase time="0.0410000000000004" classname="fda_table_06" name="Table_06_generation_works_with_custom_values"/>
    <testcase time="0.411999999999999" classname="fda_table_06" name="Table_06_generation_works_with_custom_values"/>
    <testcase time="0.117000000000001" classname="fda_table_06" name="Table_06_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_06.R:40:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_06" name="Table_06_generation_works_with_risk_difference_column"/>
    <testcase time="0.00100000000000122" classname="fda_table_06" name="Table_06_generation_works_with_risk_difference_column"/>
    <testcase time="0.0359999999999978" classname="fda_table_06" name="Table_06_generation_works_with_risk_difference_column"/>
    <testcase time="0.0340000000000025" classname="fda_table_06" name="Table_06_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_06.R:45:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_06(adae, adsl, risk_diff = risk_diff) at test-fda-table_06.R:45:3
  2. | \-... %&gt;% append_topleft(c("", "Event"))
  3. +-rtables::append_topleft(., c("", "Event"))
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_occurrences_by_grade(...)
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-tern::analyze_num_patients(...)
 11. | \-rtables::analyze(...)
 12. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 13. |   \-rtables:::last_rowsplit(lyt)
 14. +-tern::count_patients_with_flags(...)
 15. | \-rtables::analyze(...)
 16. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 17. |   \-rtables:::last_rowsplit(lyt)
 18. +-tern::count_patients_with_flags(...)
 19. | \-rtables::analyze(...)
 20. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 21. |   \-rtables:::last_rowsplit(lyt)
 22. +-tern::count_patients_with_flags(...)
 23. | \-rtables::analyze(...)
 24. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 25. |   \-rtables:::last_rowsplit(lyt)
 26. +-tern::count_patients_with_flags(...)
 27. | \-rtables::analyze(...)
 28. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 29. |   \-rtables:::last_rowsplit(lyt)
 30. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 31. | \-tern::add_riskdiff(...)
 32. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 33. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 34. |       \-checkmate:::mstop(...)
 35. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 36. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 37. +-base::.handleSimpleError(...)
 38. | \-base (local) h(simpleError(msg, call))
 39. +-base::.handleSimpleError(...)
 40. | \-base (local) h(simpleError(msg, call))
 41. +-base::.handleSimpleError(...)
 42. | \-base (local) h(simpleError(msg, call))
 43. +-base::.handleSimpleError(...)
 44. | \-base (local) h(simpleError(msg, call))
 45. \-base::.handleSimpleError(...)
 46.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_07" timestamp="2023-12-21T12:52:52Z" hostname="4e10f7e1a45f" tests="23" skipped="3" failures="0" errors="1" time="1.54">
    <testcase time="0.216999999999999" classname="fda_table_07" name="Table_07_generation_works_with_default_values"/>
    <testcase time="0.00199999999999889" classname="fda_table_07" name="Table_07_generation_works_with_default_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_07" name="Table_07_generation_works_with_default_values"/>
    <testcase time="0.0259999999999998" classname="fda_table_07" name="Table_07_generation_works_with_default_values"/>
    <testcase time="0.227" classname="fda_table_07" name="Table_07_generation_works_with_default_values"/>
    <testcase time="0.100999999999999" classname="fda_table_07" name="Table_07_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_07.R:13:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_07" name="Table_07_generation_works_with_custom_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_07" name="Table_07_generation_works_with_custom_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_07" name="Table_07_generation_works_with_custom_values"/>
    <testcase time="0.0479999999999983" classname="fda_table_07" name="Table_07_generation_works_with_custom_values"/>
    <testcase time="0.321000000000002" classname="fda_table_07" name="Table_07_generation_works_with_custom_values"/>
    <testcase time="0.129999999999999" classname="fda_table_07" name="Table_07_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_07.R:42:3')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="fda_table_07" name="Table_07_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.00100000000000122" classname="fda_table_07" name="Table_07_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.000999999999997669" classname="fda_table_07" name="Table_07_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.027000000000001" classname="fda_table_07" name="Table_07_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.222000000000001" classname="fda_table_07" name="Table_07_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.113999999999997" classname="fda_table_07" name="Table_07_generation_works_with_NA_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_07.R:52:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_07" name="Table_07_generation_works_with_risk_difference_column"/>
    <testcase time="0.00199999999999889" classname="fda_table_07" name="Table_07_generation_works_with_risk_difference_column"/>
    <testcase time="0.00100000000000122" classname="fda_table_07" name="Table_07_generation_works_with_risk_difference_column"/>
    <testcase time="0.0259999999999998" classname="fda_table_07" name="Table_07_generation_works_with_risk_difference_column"/>
    <testcase time="0.0279999999999987" classname="fda_table_07" name="Table_07_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_07.R:62:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_07(adae, adsl, risk_diff = risk_diff) at test-fda-table_07.R:62:3
  2. | \-... %&gt;% rtables::append_topleft(c("", "Deaths"))
  3. +-rtables::append_topleft(., c("", "Deaths"))
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_occurrences(...)
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-tern::summarize_num_patients(...)
 11. | \-rtables::summarize_row_groups(...)
 12. |   \-rtables::.add_row_summary(...)
 13. +-rtables::split_rows_by(...)
 14. | \-rtables:::next_rpos(lyt, nested)
 15. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 16. | \-tern::add_riskdiff(...)
 17. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 18. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 19. |       \-checkmate:::mstop(...)
 20. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 21. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 22. +-base::.handleSimpleError(...)
 23. | \-base (local) h(simpleError(msg, call))
 24. \-base::.handleSimpleError(...)
 25.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_08" timestamp="2023-12-21T12:52:53Z" hostname="4e10f7e1a45f" tests="8" skipped="2" failures="0" errors="0" time="0.515">
    <testcase time="0.126000000000001" classname="fda_table_08" name="Table_08_generation_works_with_default_values"/>
    <testcase time="0.000999999999997669" classname="fda_table_08" name="Table_08_generation_works_with_default_values"/>
    <testcase time="0.0340000000000025" classname="fda_table_08" name="Table_08_generation_works_with_default_values"/>
    <testcase time="0.139999999999997" classname="fda_table_08" name="Table_08_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_08.R:10:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_08" name="Table_08_generation_works_with_custom_values"/>
    <testcase time="0.000999999999997669" classname="fda_table_08" name="Table_08_generation_works_with_custom_values"/>
    <testcase time="0.0300000000000011" classname="fda_table_08" name="Table_08_generation_works_with_custom_values"/>
    <testcase time="0.169" classname="fda_table_08" name="Table_08_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_08.R:31:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_09" timestamp="2023-12-21T12:52:54Z" hostname="4e10f7e1a45f" tests="15" skipped="4" failures="0" errors="1" time="1.185">
    <testcase time="0.0189999999999984" classname="fda_table_09" name="Table_09_generation_works_with_default_values"/>
    <testcase time="0.0259999999999998" classname="fda_table_09" name="Table_09_generation_works_with_default_values"/>
    <testcase time="0.218" classname="fda_table_09" name="Table_09_generation_works_with_default_values"/>
    <testcase time="0.0519999999999996" classname="fda_table_09" name="Table_09_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_09.R:8:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_09" name="Table_09_generation_works_with_custom_values"/>
    <testcase time="0.0269999999999975" classname="fda_table_09" name="Table_09_generation_works_with_custom_values"/>
    <testcase time="0.264000000000003" classname="fda_table_09" name="Table_09_generation_works_with_custom_values"/>
    <testcase time="0.0599999999999987" classname="fda_table_09" name="Table_09_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_09.R:39:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_09" name="Table_09_gt_generation_works_with_risk_difference_column"/>
    <testcase time="0.0259999999999998" classname="fda_table_09" name="Table_09_gt_generation_works_with_risk_difference_column"/>
    <testcase time="0.0300000000000011" classname="fda_table_09" name="Table_09_gt_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_09.R:44:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_09(adae, adsl, risk_diff = risk_diff) at test-fda-table_09.R:44:3
  2. | \-... %&gt;% append_topleft(paste(" ", lbl_pref_var))
  3. +-rtables::append_topleft(., paste(" ", lbl_pref_var))
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_occurrences(., vars = pref_var, riskdiff = !is.null(risk_diff))
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-tern::summarize_num_patients(...)
 11. | \-rtables::summarize_row_groups(...)
 12. |   \-rtables::.add_row_summary(...)
 13. +-rtables::split_rows_by(...)
 14. | \-rtables:::next_rpos(lyt, nested)
 15. +-tern::analyze_num_patients(...)
 16. | \-rtables::analyze(...)
 17. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 18. |   \-rtables:::last_rowsplit(lyt)
 19. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 20. | \-tern::add_riskdiff(...)
 21. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 22. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 23. |       \-checkmate:::mstop(...)
 24. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 25. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 26. +-base::.handleSimpleError(...)
 27. | \-base (local) h(simpleError(msg, call))
 28. +-base::.handleSimpleError(...)
 29. | \-base (local) h(simpleError(msg, call))
 30. \-base::.handleSimpleError(...)
 31.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.138999999999999" classname="fda_table_09" name="Table_09_gt_generation_works_with_default_values"/>
    <testcase time="0.117000000000001" classname="fda_table_09" name="Table_09_gt_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_09.R:60:3')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="fda_table_09" name="Table_09_gt_generation_works_with_custom_values"/>
    <testcase time="0.163999999999998" classname="fda_table_09" name="Table_09_gt_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_09.R:88:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_10" timestamp="2023-12-21T12:52:55Z" hostname="4e10f7e1a45f" tests="14" skipped="2" failures="0" errors="1" time="0.812">
    <testcase time="0.0259999999999998" classname="fda_table_10" name="Table_10_generation_works_with_default_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_10" name="Table_10_generation_works_with_default_values"/>
    <testcase time="0.0299999999999976" classname="fda_table_10" name="Table_10_generation_works_with_default_values"/>
    <testcase time="0.248000000000001" classname="fda_table_10" name="Table_10_generation_works_with_default_values"/>
    <testcase time="0.108999999999998" classname="fda_table_10" name="Table_10_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_10.R:17:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_10" name="Table_10_generation_works_with_custom_values"/>
    <testcase time="0.000999999999997669" classname="fda_table_10" name="Table_10_generation_works_with_custom_values"/>
    <testcase time="0.0240000000000009" classname="fda_table_10" name="Table_10_generation_works_with_custom_values"/>
    <testcase time="0.234999999999999" classname="fda_table_10" name="Table_10_generation_works_with_custom_values"/>
    <testcase time="0.0480000000000018" classname="fda_table_10" name="Table_10_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_10.R:52:3')"/>
    </testcase>
    <testcase time="0.0219999999999985" classname="fda_table_10" name="Table_10_generation_works_with_risk_difference_column"/>
    <testcase time="0.00100000000000122" classname="fda_table_10" name="Table_10_generation_works_with_risk_difference_column"/>
    <testcase time="0.0269999999999975" classname="fda_table_10" name="Table_10_generation_works_with_risk_difference_column"/>
    <testcase time="0.0260000000000034" classname="fda_table_10" name="Table_10_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_10.R:57:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_10(adae, adsl, risk_diff = risk_diff) at test-fda-table_10.R:57:3
  2. | \-... %&gt;% append_varlabels(adae, fmqnam_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, fmqnam_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = fmqnam_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-rtables::split_rows_by(...)
 12. | \-rtables:::next_rpos(lyt, nested)
 13. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 14. | \-tern::add_riskdiff(...)
 15. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 16. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 17. |       \-checkmate:::mstop(...)
 18. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 19. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 20. \-base::.handleSimpleError(...)
 21.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_11" timestamp="2023-12-21T12:52:56Z" hostname="4e10f7e1a45f" tests="11" skipped="2" failures="0" errors="1" time="1.276">
    <testcase time="0.093" classname="fda_table_11" name="Table_11_generation_works_with_default_values"/>
    <testcase time="0.032" classname="fda_table_11" name="Table_11_generation_works_with_default_values"/>
    <testcase time="0.445999999999998" classname="fda_table_11" name="Table_11_generation_works_with_default_values"/>
    <testcase time="0.126000000000001" classname="fda_table_11" name="Table_11_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_11.R:18:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_11" name="Table_11_generation_works_with_custom_values"/>
    <testcase time="0.0289999999999999" classname="fda_table_11" name="Table_11_generation_works_with_custom_values"/>
    <testcase time="0.395" classname="fda_table_11" name="Table_11_generation_works_with_custom_values"/>
    <testcase time="0.0549999999999997" classname="fda_table_11" name="Table_11_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_11.R:48:3')"/>
    </testcase>
    <testcase time="0.0190000000000019" classname="fda_table_11" name="Table_11_generation_works_with_risk_difference_column"/>
    <testcase time="0.0380000000000003" classname="fda_table_11" name="Table_11_generation_works_with_risk_difference_column"/>
    <testcase time="0.0289999999999999" classname="fda_table_11" name="Table_11_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_11.R:53:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_11(adae, adsl, risk_diff = risk_diff) at test-fda-table_11.R:53:3
  2. | \-... %&gt;% append_varlabels(adae, fmqnam_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, fmqnam_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = fmqnam_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-tern::summarize_num_patients(...)
 12. | \-rtables::summarize_row_groups(...)
 13. |   \-rtables::.add_row_summary(...)
 14. +-rtables::split_rows_by(...)
 15. | \-rtables:::next_rpos(lyt, nested)
 16. +-tern::analyze_num_patients(...)
 17. | \-rtables::analyze(...)
 18. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 19. |   \-rtables:::last_rowsplit(lyt)
 20. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 21. | \-tern::add_riskdiff(...)
 22. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 23. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 24. |       \-checkmate:::mstop(...)
 25. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 26. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 27. +-base::.handleSimpleError(...)
 28. | \-base (local) h(simpleError(msg, call))
 29. +-base::.handleSimpleError(...)
 30. | \-base (local) h(simpleError(msg, call))
 31. \-base::.handleSimpleError(...)
 32.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_12" timestamp="2023-12-21T12:52:57Z" hostname="4e10f7e1a45f" tests="11" skipped="2" failures="0" errors="1" time="1.656">
    <testcase time="0.151999999999997" classname="fda_table_12" name="Table_12_generation_works_with_default_values"/>
    <testcase time="0.0340000000000025" classname="fda_table_12" name="Table_12_generation_works_with_default_values"/>
    <testcase time="0.57" classname="fda_table_12" name="Table_12_generation_works_with_default_values"/>
    <testcase time="0.100999999999999" classname="fda_table_12" name="Table_12_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_12.R:9:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_12" name="Table_12_generation_works_with_custom_values"/>
    <testcase time="0.0330000000000013" classname="fda_table_12" name="Table_12_generation_works_with_custom_values"/>
    <testcase time="0.570999999999998" classname="fda_table_12" name="Table_12_generation_works_with_custom_values"/>
    <testcase time="0.103000000000002" classname="fda_table_12" name="Table_12_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_12.R:39:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_12" name="Table_12_generation_works_with_risk_difference_column"/>
    <testcase time="0.0330000000000013" classname="fda_table_12" name="Table_12_generation_works_with_risk_difference_column"/>
    <testcase time="0.0309999999999988" classname="fda_table_12" name="Table_12_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_12.R:44:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'lyt' in selecting a method for function '.add_row_summary': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_12(adae, adsl, risk_diff = risk_diff) at test-fda-table_12.R:44:3
  2. | \-... %&gt;% append_varlabels(adae, pref_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, pref_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = pref_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-tern::summarize_num_patients(...)
 12. | \-rtables::summarize_row_groups(...)
 13. |   \-rtables::.add_row_summary(...)
 14. +-rtables::split_rows_by(...)
 15. | \-rtables:::next_rpos(lyt, nested)
 16. +-tern::analyze_num_patients(...)
 17. | \-rtables::analyze(...)
 18. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 19. |   \-rtables:::last_rowsplit(lyt)
 20. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 21. | \-tern::add_riskdiff(...)
 22. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 23. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 24. |       \-checkmate:::mstop(...)
 25. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 26. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 27. +-base::.handleSimpleError(...)
 28. | \-base (local) h(simpleError(msg, call))
 29. +-base::.handleSimpleError(...)
 30. | \-base (local) h(simpleError(msg, call))
 31. \-base::.handleSimpleError(...)
 32.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_13" timestamp="2023-12-21T12:52:59Z" hostname="4e10f7e1a45f" tests="11" skipped="2" failures="0" errors="1" time="0.595">
    <testcase time="0.151" classname="fda_table_13" name="Table_13_generation_works_with_default_values"/>
    <testcase time="0.0330000000000013" classname="fda_table_13" name="Table_13_generation_works_with_default_values"/>
    <testcase time="0.093" classname="fda_table_13" name="Table_13_generation_works_with_default_values"/>
    <testcase time="0.0549999999999997" classname="fda_table_13" name="Table_13_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_13.R:8:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_13" name="Table_13_generation_works_with_custom_values"/>
    <testcase time="0.0330000000000013" classname="fda_table_13" name="Table_13_generation_works_with_custom_values"/>
    <testcase time="0.106999999999999" classname="fda_table_13" name="Table_13_generation_works_with_custom_values"/>
    <testcase time="0.0389999999999979" classname="fda_table_13" name="Table_13_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_13.R:38:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_13" name="Table_13_generation_works_with_risk_difference_column"/>
    <testcase time="0.0329999999999977" classname="fda_table_13" name="Table_13_generation_works_with_risk_difference_column"/>
    <testcase time="0.0229999999999997" classname="fda_table_13" name="Table_13_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `(function (cond)  ('test-fda-table_13.R:43:3')">Error in `(function (cond) 
.Internal(C_tryCatchHelper(addr, 1L, cond)))(structure(list(message = "Assertion on 'col_label' failed: Must be of type 'character', not 'language'.", 
    call = add_riskdiff(arm_x = risk_diff$arm_x, arm_y = risk_diff$arm_y, 
        col_label = if ("col_label" %in% names(risk_diff)) risk_diff$col_label else formals(add_riskdiff)$col_label, 
        pct = if ("pct" %in% names(risk_diff)) risk_diff$pct else TRUE)), class = c("simpleError", 
"error", "condition")))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_13(adae, adsl, risk_diff = risk_diff) at test-fda-table_13.R:43:3
  2. | \-... %&gt;% append_topleft(c("", lbl_pref_var))
  3. +-rtables::append_topleft(., c("", lbl_pref_var))
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_occurrences(., vars = pref_var, riskdiff = !is.null(risk_diff))
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 11. | \-tern::add_riskdiff(...)
 12. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 13. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 14. |       \-checkmate:::mstop(...)
 15. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 16. \-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_14" timestamp="2023-12-21T12:52:59Z" hostname="4e10f7e1a45f" tests="12" skipped="3" failures="0" errors="1" time="1.785">
    <testcase time="0.0839999999999996" classname="fda_table_14" name="Table_14_generation_works_with_default_values"/>
    <testcase time="0.386000000000003" classname="fda_table_14" name="Table_14_generation_works_with_default_values"/>
    <testcase time="0.133999999999997" classname="fda_table_14" name="Table_14_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_14.R:16:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_14" name="Table_14_generation_works_with_custom_values"/>
    <testcase time="0.032" classname="fda_table_14" name="Table_14_generation_works_with_custom_values"/>
    <testcase time="0.420999999999999" classname="fda_table_14" name="Table_14_generation_works_with_custom_values"/>
    <testcase time="0.137" classname="fda_table_14" name="Table_14_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_14.R:46:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_14" name="Table_14_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.396999999999998" classname="fda_table_14" name="Table_14_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.108000000000001" classname="fda_table_14" name="Table_14_generation_works_with_NA_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_14.R:53:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_14" name="Table_14_generation_works_with_risk_difference_column"/>
    <testcase time="0.0440000000000005" classname="fda_table_14" name="Table_14_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_14.R:58:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_14(adae, risk_diff = risk_diff) at test-fda-table_14.R:58:3
  2. | \-... %&gt;% append_varlabels(adae, fmqnam_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, fmqnam_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = fmqnam_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-rtables::split_rows_by(...)
 12. | \-rtables:::next_rpos(lyt, nested)
 13. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 14. | \-tern::add_riskdiff(...)
 15. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 16. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 17. |       \-checkmate:::mstop(...)
 18. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 19. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 20. \-base::.handleSimpleError(...)
 21.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_15" timestamp="2023-12-21T12:53:01Z" hostname="4e10f7e1a45f" tests="15" skipped="3" failures="0" errors="1" time="1.157">
    <testcase time="0.113" classname="fda_table_15" name="Table_15_generation_works_with_default_values"/>
    <testcase time="0.0289999999999999" classname="fda_table_15" name="Table_15_generation_works_with_default_values"/>
    <testcase time="0.196000000000002" classname="fda_table_15" name="Table_15_generation_works_with_default_values"/>
    <testcase time="0.0829999999999984" classname="fda_table_15" name="Table_15_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_15.R:19:3')"/>
    </testcase>
    <testcase time="0.0200000000000031" classname="fda_table_15" name="Table_15_generation_works_with_custom_values"/>
    <testcase time="0.0339999999999989" classname="fda_table_15" name="Table_15_generation_works_with_custom_values"/>
    <testcase time="0.198" classname="fda_table_15" name="Table_15_generation_works_with_custom_values"/>
    <testcase time="0.0829999999999984" classname="fda_table_15" name="Table_15_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_15.R:51:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_15" name="Table_15_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0280000000000022" classname="fda_table_15" name="Table_15_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.199999999999999" classname="fda_table_15" name="Table_15_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0899999999999999" classname="fda_table_15" name="Table_15_generation_works_with_NA_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_15.R:58:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_15" name="Table_15_generation_works_with_risk_difference_column"/>
    <testcase time="0.0289999999999999" classname="fda_table_15" name="Table_15_generation_works_with_risk_difference_column"/>
    <testcase time="0.0259999999999998" classname="fda_table_15" name="Table_15_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_15.R:63:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_15(adae, adsl, risk_diff = risk_diff) at test-fda-table_15.R:63:3
  2. | \-... %&gt;% append_varlabels(adae, pref_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, pref_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = pref_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-rtables::split_rows_by(...)
 12. | \-rtables:::next_rpos(lyt, nested)
 13. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 14. | \-tern::add_riskdiff(...)
 15. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 16. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 17. |       \-checkmate:::mstop(...)
 18. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 19. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 20. \-base::.handleSimpleError(...)
 21.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_16" timestamp="2023-12-21T12:53:02Z" hostname="4e10f7e1a45f" tests="15" skipped="3" failures="0" errors="1" time="1.006">
    <testcase time="0.105" classname="fda_table_16" name="Table_16_generation_works_with_default_values"/>
    <testcase time="0.0259999999999998" classname="fda_table_16" name="Table_16_generation_works_with_default_values"/>
    <testcase time="0.193999999999999" classname="fda_table_16" name="Table_16_generation_works_with_default_values"/>
    <testcase time="0.0410000000000004" classname="fda_table_16" name="Table_16_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_16.R:19:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_16" name="Table_16_generation_works_with_custom_values"/>
    <testcase time="0.032" classname="fda_table_16" name="Table_16_generation_works_with_custom_values"/>
    <testcase time="0.200000000000003" classname="fda_table_16" name="Table_16_generation_works_with_custom_values"/>
    <testcase time="0.0399999999999991" classname="fda_table_16" name="Table_16_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_16.R:51:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_16" name="Table_16_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0259999999999998" classname="fda_table_16" name="Table_16_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.193999999999999" classname="fda_table_16" name="Table_16_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0400000000000027" classname="fda_table_16" name="Table_16_generation_works_with_NA_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_16.R:58:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_16" name="Table_16_generation_works_with_risk_difference_column"/>
    <testcase time="0.0380000000000003" classname="fda_table_16" name="Table_16_generation_works_with_risk_difference_column"/>
    <testcase time="0.0279999999999987" classname="fda_table_16" name="Table_16_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_16.R:63:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_16(adae, adsl, risk_diff = risk_diff) at test-fda-table_16.R:63:3
  2. | \-... %&gt;% append_varlabels(adae, pref_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, pref_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = pref_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-rtables::split_rows_by(...)
 12. | \-rtables:::next_rpos(lyt, nested)
 13. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 14. | \-tern::add_riskdiff(...)
 15. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 16. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 17. |       \-checkmate:::mstop(...)
 18. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 19. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 20. \-base::.handleSimpleError(...)
 21.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_17" timestamp="2023-12-21T12:53:03Z" hostname="4e10f7e1a45f" tests="15" skipped="3" failures="0" errors="1" time="1.7">
    <testcase time="0.093" classname="fda_table_17" name="Table_17_generation_works_with_default_values"/>
    <testcase time="0.0300000000000011" classname="fda_table_17" name="Table_17_generation_works_with_default_values"/>
    <testcase time="0.309000000000001" classname="fda_table_17" name="Table_17_generation_works_with_default_values"/>
    <testcase time="0.157" classname="fda_table_17" name="Table_17_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_17.R:25:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_17" name="Table_17_generation_works_with_custom_values"/>
    <testcase time="0.0299999999999976" classname="fda_table_17" name="Table_17_generation_works_with_custom_values"/>
    <testcase time="0.325000000000003" classname="fda_table_17" name="Table_17_generation_works_with_custom_values"/>
    <testcase time="0.158999999999999" classname="fda_table_17" name="Table_17_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_17.R:57:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_17" name="Table_17_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0300000000000011" classname="fda_table_17" name="Table_17_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.308" classname="fda_table_17" name="Table_17_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.146000000000001" classname="fda_table_17" name="Table_17_generation_works_with_NA_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_17.R:64:3')"/>
    </testcase>
    <testcase time="0.0199999999999996" classname="fda_table_17" name="Table_17_generation_works_with_risk_difference_column"/>
    <testcase time="0.036999999999999" classname="fda_table_17" name="Table_17_generation_works_with_risk_difference_column"/>
    <testcase time="0.0279999999999987" classname="fda_table_17" name="Table_17_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_17.R:69:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_17(adae, adsl, risk_diff = risk_diff) at test-fda-table_17.R:69:3
  2. | \-... %&gt;% append_varlabels(adae, pref_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, pref_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = pref_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-rtables::split_rows_by(...)
 12. | \-rtables:::next_rpos(lyt, nested)
 13. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 14. | \-tern::add_riskdiff(...)
 15. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 16. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 17. |       \-checkmate:::mstop(...)
 18. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 19. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 20. \-base::.handleSimpleError(...)
 21.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_18" timestamp="2023-12-21T12:53:05Z" hostname="4e10f7e1a45f" tests="15" skipped="3" failures="0" errors="1" time="1.384">
    <testcase time="0.093" classname="fda_table_18" name="Table_18_generation_works_with_default_values"/>
    <testcase time="0.0259999999999998" classname="fda_table_18" name="Table_18_generation_works_with_default_values"/>
    <testcase time="0.307000000000002" classname="fda_table_18" name="Table_18_generation_works_with_default_values"/>
    <testcase time="0.0599999999999987" classname="fda_table_18" name="Table_18_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_18.R:25:3')"/>
    </testcase>
    <testcase time="0.022000000000002" classname="fda_table_18" name="Table_18_generation_works_with_custom_values"/>
    <testcase time="0.032" classname="fda_table_18" name="Table_18_generation_works_with_custom_values"/>
    <testcase time="0.296999999999997" classname="fda_table_18" name="Table_18_generation_works_with_custom_values"/>
    <testcase time="0.0730000000000004" classname="fda_table_18" name="Table_18_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_18.R:57:3')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="fda_table_18" name="Table_18_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0259999999999998" classname="fda_table_18" name="Table_18_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.304000000000002" classname="fda_table_18" name="Table_18_generation_works_with_NA_values_pruned_rows"/>
    <testcase time="0.0609999999999999" classname="fda_table_18" name="Table_18_generation_works_with_NA_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_18.R:64:3')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="fda_table_18" name="Table_18_generation_works_with_risk_difference_column"/>
    <testcase time="0.0269999999999975" classname="fda_table_18" name="Table_18_generation_works_with_risk_difference_column"/>
    <testcase time="0.0259999999999998" classname="fda_table_18" name="Table_18_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_18.R:69:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_18(adae, adsl, risk_diff = risk_diff) at test-fda-table_18.R:69:3
  2. | \-... %&gt;% append_varlabels(adae, pref_var, indent = 1L)
  3. +-tern::append_varlabels(., adae, pref_var, indent = 1L)
  4. | \-rtables::append_topleft(lyt, lab)
  5. |   +-base::stopifnot(...)
  6. |   \-methods::is(lyt, "PreDataTableLayouts")
  7. +-tern::count_occurrences(., vars = pref_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  8. | \-rtables::analyze(...)
  9. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 10. |   \-rtables:::last_rowsplit(lyt)
 11. +-rtables::split_rows_by(...)
 12. | \-rtables:::next_rpos(lyt, nested)
 13. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 14. | \-tern::add_riskdiff(...)
 15. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 16. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 17. |       \-checkmate:::mstop(...)
 18. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 19. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 20. \-base::.handleSimpleError(...)
 21.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_20" timestamp="2023-12-21T12:53:06Z" hostname="4e10f7e1a45f" tests="23" skipped="3" failures="0" errors="1" time="1.847">
    <testcase time="0.106999999999999" classname="fda_table_20" name="Table_20_generation_works_with_default_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_20" name="Table_20_generation_works_with_default_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_20" name="Table_20_generation_works_with_default_values"/>
    <testcase time="0.0299999999999976" classname="fda_table_20" name="Table_20_generation_works_with_default_values"/>
    <testcase time="0.315000000000001" classname="fda_table_20" name="Table_20_generation_works_with_default_values"/>
    <testcase time="0.0749999999999993" classname="fda_table_20" name="Table_20_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_20.R:17:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="fda_table_20" name="Table_20_generation_works_with_custom_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_20" name="Table_20_generation_works_with_custom_values"/>
    <testcase time="0.00100000000000122" classname="fda_table_20" name="Table_20_generation_works_with_custom_values"/>
    <testcase time="0.0289999999999999" classname="fda_table_20" name="Table_20_generation_works_with_custom_values"/>
    <testcase time="0.471" classname="fda_table_20" name="Table_20_generation_works_with_custom_values"/>
    <testcase time="0.106000000000002" classname="fda_table_20" name="Table_20_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_20.R:65:3')"/>
    </testcase>
    <testcase time="0.0139999999999958" classname="fda_table_20" name="Table_20_generation_works_with_missing_values_pruned_rows"/>
    <testcase time="0.00100000000000477" classname="fda_table_20" name="Table_20_generation_works_with_missing_values_pruned_rows"/>
    <testcase time="0.00199999999999534" classname="fda_table_20" name="Table_20_generation_works_with_missing_values_pruned_rows"/>
    <testcase time="0.0290000000000035" classname="fda_table_20" name="Table_20_generation_works_with_missing_values_pruned_rows"/>
    <testcase time="0.497" classname="fda_table_20" name="Table_20_generation_works_with_missing_values_pruned_rows"/>
    <testcase time="0.0689999999999955" classname="fda_table_20" name="Table_20_generation_works_with_missing_values_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_20.R:74:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_20" name="Table_20_generation_works_with_risk_difference_column"/>
    <testcase time="0.000999999999997669" classname="fda_table_20" name="Table_20_generation_works_with_risk_difference_column"/>
    <testcase time="0.00100000000000477" classname="fda_table_20" name="Table_20_generation_works_with_risk_difference_column"/>
    <testcase time="0.0289999999999964" classname="fda_table_20" name="Table_20_generation_works_with_risk_difference_column"/>
    <testcase time="0.0390000000000015" classname="fda_table_20" name="Table_20_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_20.R:79:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_20(adae, adsl, risk_diff = risk_diff) at test-fda-table_20.R:79:3
  2. | \-... %&gt;% append_topleft(c("", "AESI Assessment"))
  3. +-rtables::append_topleft(., c("", "AESI Assessment"))
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_patients_with_flags(...)
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-tern::count_patients_with_event(...)
 11. | \-rtables::analyze(...)
 12. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 13. |   \-rtables:::last_rowsplit(lyt)
 14. +-tern::count_patients_with_event(...)
 15. | \-rtables::analyze(...)
 16. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 17. |   \-rtables:::last_rowsplit(lyt)
 18. +-tern::count_patients_with_event(...)
 19. | \-rtables::analyze(...)
 20. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 21. |   \-rtables:::last_rowsplit(lyt)
 22. +-tern::count_patients_with_event(...)
 23. | \-rtables::analyze(...)
 24. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 25. |   \-rtables:::last_rowsplit(lyt)
 26. +-tern::count_occurrences_by_grade(...)
 27. | \-rtables::analyze(...)
 28. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 29. |   \-rtables:::last_rowsplit(lyt)
 30. +-tern::count_occurrences(...)
 31. | \-rtables::analyze(...)
 32. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 33. |   \-rtables:::last_rowsplit(lyt)
 34. +-tern::count_patients_with_flags(...)
 35. | \-rtables::analyze(...)
 36. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
 37. |   \-rtables:::last_rowsplit(lyt)
 38. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 39. | \-tern::add_riskdiff(...)
 40. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 41. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 42. |       \-checkmate:::mstop(...)
 43. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 44. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 45. +-base::.handleSimpleError(...)
 46. | \-base (local) h(simpleError(msg, call))
 47. +-base::.handleSimpleError(...)
 48. | \-base (local) h(simpleError(msg, call))
 49. +-base::.handleSimpleError(...)
 50. | \-base (local) h(simpleError(msg, call))
 51. +-base::.handleSimpleError(...)
 52. | \-base (local) h(simpleError(msg, call))
 53. +-base::.handleSimpleError(...)
 54. | \-base (local) h(simpleError(msg, call))
 55. +-base::.handleSimpleError(...)
 56. | \-base (local) h(simpleError(msg, call))
 57. \-base::.handleSimpleError(...)
 58.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_21" timestamp="2023-12-21T12:53:08Z" hostname="4e10f7e1a45f" tests="19" skipped="4" failures="0" errors="0" time="2.042">
    <testcase time="0.283000000000001" classname="fda_table_21" name="Table_21_generation_works_with_default_values"/>
    <testcase time="0.000999999999997669" classname="fda_table_21" name="Table_21_generation_works_with_default_values"/>
    <testcase time="0.392000000000003" classname="fda_table_21" name="Table_21_generation_works_with_default_values"/>
    <testcase time="0.0910000000000011" classname="fda_table_21" name="Table_21_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_21.R:22:3')"/>
    </testcase>
    <testcase time="0.0139999999999958" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_s_denominator_and_overall_column"/>
    <testcase time="0.000999999999997669" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_s_denominator_and_overall_column"/>
    <testcase time="0.0510000000000019" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_s_denominator_and_overall_column"/>
    <testcase time="0.472000000000001" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_s_denominator_and_overall_column"/>
    <testcase time="0.100999999999999" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_s_denominator_and_overall_column">
      <skipped message="Reason: On CRAN ('test-fda-table_21.R:34:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_col_denominator_and_no_overall_column"/>
    <testcase time="0.00200000000000244" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_col_denominator_and_no_overall_column"/>
    <testcase time="0.0330000000000013" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_col_denominator_and_no_overall_column"/>
    <testcase time="0.207999999999998" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_col_denominator_and_no_overall_column"/>
    <testcase time="0.0850000000000009" classname="fda_table_21" name="Table_21_generation_works_with_custom_values_N_col_denominator_and_no_overall_column">
      <skipped message="Reason: On CRAN ('test-fda-table_21.R:62:3')"/>
    </testcase>
    <testcase time="0.0439999999999969" classname="fda_table_21" name="Table_21_generation_works_with_some_NA_values"/>
    <testcase time="0.000999999999997669" classname="fda_table_21" name="Table_21_generation_works_with_some_NA_values"/>
    <testcase time="0.0310000000000059" classname="fda_table_21" name="Table_21_generation_works_with_some_NA_values"/>
    <testcase time="0.161999999999999" classname="fda_table_21" name="Table_21_generation_works_with_some_NA_values"/>
    <testcase time="0.0559999999999974" classname="fda_table_21" name="Table_21_generation_works_with_some_NA_values">
      <skipped message="Reason: On CRAN ('test-fda-table_21.R:82:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_32" timestamp="2023-12-21T12:53:10Z" hostname="4e10f7e1a45f" tests="21" skipped="5" failures="0" errors="1" time="3.577">
    <testcase time="0.0219999999999985" classname="fda_table_32" name="Table_32_generation_works_with_default_values"/>
    <testcase time="0.0339999999999989" classname="fda_table_32" name="Table_32_generation_works_with_default_values"/>
    <testcase time="0.0810000000000031" classname="fda_table_32" name="Table_32_generation_works_with_default_values"/>
    <testcase time="0.036999999999999" classname="fda_table_32" name="Table_32_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_32.R:8:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_32" name="Table_32_generation_works_with_custom_values"/>
    <testcase time="0.0379999999999967" classname="fda_table_32" name="Table_32_generation_works_with_custom_values"/>
    <testcase time="0.100000000000001" classname="fda_table_32" name="Table_32_generation_works_with_custom_values"/>
    <testcase time="0.0439999999999969" classname="fda_table_32" name="Table_32_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_32.R:30:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_32" name="Table_32_generation_works_with_pruned_rows"/>
    <testcase time="0.0390000000000015" classname="fda_table_32" name="Table_32_generation_works_with_pruned_rows"/>
    <testcase time="0.0829999999999984" classname="fda_table_32" name="Table_32_generation_works_with_pruned_rows"/>
    <testcase time="0.0260000000000034" classname="fda_table_32" name="Table_32_generation_works_with_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_32.R:37:3')"/>
    </testcase>
    <testcase time="0.0139999999999958" classname="fda_table_32" name="Table_32_generation_works_with_risk_difference_column"/>
    <testcase time="0.0339999999999989" classname="fda_table_32" name="Table_32_generation_works_with_risk_difference_column"/>
    <testcase time="0.027000000000001" classname="fda_table_32" name="Table_32_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `(function (cond)  ('test-fda-table_32.R:42:3')">Error in `(function (cond) 
.Internal(C_tryCatchHelper(addr, 1L, cond)))(structure(list(message = "Assertion on 'col_label' failed: Must be of type 'character', not 'language'.", 
    call = add_riskdiff(arm_x = risk_diff$arm_x, arm_y = risk_diff$arm_y, 
        col_label = if ("col_label" %in% names(risk_diff)) risk_diff$col_label else formals(add_riskdiff)$col_label, 
        pct = if ("pct" %in% names(risk_diff)) risk_diff$pct else TRUE)), class = c("simpleError", 
"error", "condition")))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_32(advs, adsl, risk_diff = risk_diff) at test-fda-table_32.R:42:3
  2. | \-... %&gt;% ...
  3. +-rtables::append_topleft(...)
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_patients_with_flags(...)
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 11. | \-tern::add_riskdiff(...)
 12. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 13. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 14. |       \-checkmate:::mstop(...)
 15. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 16. \-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)</error>
    </testcase>
    <testcase time="0.0850000000000009" classname="fda_table_32" name="Table_32_gtsum_generation_works_with_default_values"/>
    <testcase time="1.166" classname="fda_table_32" name="Table_32_gtsum_generation_works_with_default_values"/>
    <testcase time="0.00499999999999545" classname="fda_table_32" name="Table_32_gtsum_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_32.R:51:3')"/>
    </testcase>
    <testcase time="0.0320000000000036" classname="fda_table_32" name="Table_32_gtsum_generation_works_with_custom_values"/>
    <testcase time="1.677" classname="fda_table_32" name="Table_32_gtsum_generation_works_with_custom_values"/>
    <testcase time="0.00499999999999545" classname="fda_table_32" name="Table_32_gtsum_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_32.R:61:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_33" timestamp="2023-12-21T12:53:14Z" hostname="4e10f7e1a45f" tests="15" skipped="3" failures="0" errors="1" time="1.196">
    <testcase time="0.0180000000000007" classname="fda_table_33" name="Table_33_generation_works_with_default_values"/>
    <testcase time="0.198" classname="fda_table_33" name="Table_33_generation_works_with_default_values"/>
    <testcase time="0.0690000000000026" classname="fda_table_33" name="Table_33_generation_works_with_default_values"/>
    <testcase time="0.0339999999999989" classname="fda_table_33" name="Table_33_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_33.R:8:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_33" name="Table_33_generation_works_with_custom_values"/>
    <testcase time="0.198" classname="fda_table_33" name="Table_33_generation_works_with_custom_values"/>
    <testcase time="0.0839999999999961" classname="fda_table_33" name="Table_33_generation_works_with_custom_values"/>
    <testcase time="0.0330000000000013" classname="fda_table_33" name="Table_33_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_33.R:34:3')"/>
    </testcase>
    <testcase time="0.0139999999999958" classname="fda_table_33" name="Table_33_generation_works_with_pruned_rows"/>
    <testcase time="0.201000000000001" classname="fda_table_33" name="Table_33_generation_works_with_pruned_rows"/>
    <testcase time="0.0740000000000052" classname="fda_table_33" name="Table_33_generation_works_with_pruned_rows"/>
    <testcase time="0.0229999999999961" classname="fda_table_33" name="Table_33_generation_works_with_pruned_rows">
      <skipped message="Reason: On CRAN ('test-fda-table_33.R:42:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="fda_table_33" name="Table_33_generation_works_with_risk_difference_column"/>
    <testcase time="0.198999999999998" classname="fda_table_33" name="Table_33_generation_works_with_risk_difference_column"/>
    <testcase time="0.0230000000000032" classname="fda_table_33" name="Table_33_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `(function (cond)  ('test-fda-table_33.R:47:3')">Error in `(function (cond) 
.Internal(C_tryCatchHelper(addr, 1L, cond)))(structure(list(message = "Assertion on 'col_label' failed: Must be of type 'character', not 'language'.", 
    call = add_riskdiff(arm_x = risk_diff$arm_x, arm_y = risk_diff$arm_y, 
        col_label = if ("col_label" %in% names(risk_diff)) risk_diff$col_label else formals(add_riskdiff)$col_label, 
        pct = if ("pct" %in% names(risk_diff)) risk_diff$pct else TRUE)), class = c("simpleError", 
"error", "condition")))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_33(advs, adsl, risk_diff = risk_diff) at test-fda-table_33.R:47:3
  2. | \-... %&gt;% ...
  3. +-rtables::append_topleft(...)
  4. | +-base::stopifnot(...)
  5. | \-methods::is(lyt, "PreDataTableLayouts")
  6. +-tern::count_patients_with_flags(...)
  7. | \-rtables::analyze(...)
  8. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  9. |   \-rtables:::last_rowsplit(lyt)
 10. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 11. | \-tern::add_riskdiff(...)
 12. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 13. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 14. |       \-checkmate:::mstop(...)
 15. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 16. \-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_34" timestamp="2023-12-21T12:53:15Z" hostname="4e10f7e1a45f" tests="11" skipped="2" failures="0" errors="1" time="2.782">
    <testcase time="0.0959999999999965" classname="fda_table_34" name="Table_34_generation_works_with_default_values"/>
    <testcase time="0.027000000000001" classname="fda_table_34" name="Table_34_generation_works_with_default_values"/>
    <testcase time="1.164" classname="fda_table_34" name="Table_34_generation_works_with_default_values"/>
    <testcase time="0.18" classname="fda_table_34" name="Table_34_generation_works_with_default_values">
      <skipped message="Reason: On CRAN ('test-fda-table_34.R:17:3')"/>
    </testcase>
    <testcase time="0.0139999999999958" classname="fda_table_34" name="Table_34_generation_works_with_custom_values"/>
    <testcase time="0.0250000000000057" classname="fda_table_34" name="Table_34_generation_works_with_custom_values"/>
    <testcase time="1.134" classname="fda_table_34" name="Table_34_generation_works_with_custom_values"/>
    <testcase time="0.0649999999999977" classname="fda_table_34" name="Table_34_generation_works_with_custom_values">
      <skipped message="Reason: On CRAN ('test-fda-table_34.R:49:3')"/>
    </testcase>
    <testcase time="0.0139999999999958" classname="fda_table_34" name="Table_34_generation_works_with_risk_difference_column"/>
    <testcase time="0.027000000000001" classname="fda_table_34" name="Table_34_generation_works_with_risk_difference_column"/>
    <testcase time="0.0360000000000014" classname="fda_table_34" name="Table_34_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'. ('test-fda-table_34.R:54:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'obj' in selecting a method for function 'last_rowsplit': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': error in evaluating the argument 'obj' in selecting a method for function 'next_rpos': Assertion on 'col_label' failed: Must be of type 'character', not 'language'.
Backtrace:
     x
  1. +-falcon::make_table_34(adae, adsl, risk_diff = risk_diff) at test-fda-table_34.R:54:3
  2. | \-... %&gt;% ...
  3. +-tern::count_occurrences(., vars = pref_var, drop = FALSE, riskdiff = !is.null(risk_diff))
  4. | \-rtables::analyze(...)
  5. |   +-methods::is(last_rowsplit(lyt), "VAnalyzeSplit")
  6. |   \-rtables:::last_rowsplit(lyt)
  7. +-rtables::split_rows_by(...)
  8. | \-rtables:::next_rpos(lyt, nested)
  9. +-rtables::split_rows_by(...)
 10. | \-rtables:::next_rpos(lyt, nested)
 11. +-falcon::split_cols_by_arm(., arm_var, lbl_overall, risk_diff)
 12. | \-tern::add_riskdiff(...)
 13. |   \-checkmate::assert_character(col_label, len = length(arm_y))
 14. |     \-checkmate::makeAssertion(x, res, .var.name, add)
 15. |       \-checkmate:::mstop(...)
 16. |         \-base::stop(simpleError(sprintf(msg, ...), call.))
 17. +-base (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 18. +-base::.handleSimpleError(...)
 19. | \-base (local) h(simpleError(msg, call))
 20. \-base::.handleSimpleError(...)
 21.   \-base (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="fda-table_35" timestamp="2023-12-21T12:53:18Z" hostname="4e10f7e1a45f" tests="5" skipped="0" failures="0" errors="5" time="0.188">
    <testcase time="0.102000000000004" classname="fda_table_35" name="Table_35_generation_works_with_default_values">
      <error type="error" message="Error in `eval(code, test_env)`: object 'adae' not found ('test-fda-table_35.R:5:3')">Error in `eval(code, test_env)`: object 'adae' not found
Backtrace:
    x
 1. \-falcon::make_table_35(adae, adsl) at test-fda-table_35.R:5:3
 2.   \-checkmate::assert_subset(...)
 3.     \-checkmate::checkSubset(x, choices, empty.ok, fmatch)
 4.       \-checkmate:::check_subset_internal(x, choices, match)
 5.         \-checkmate::qassert(choices, "a")</error>
    </testcase>
    <testcase time="0.0209999999999937" classname="fda_table_35" name="Table_35_generation_works_with_custom_values">
      <error type="error" message="Error in `eval(code, test_env)`: object 'adae' not found ('test-fda-table_35.R:12:3')">Error in `eval(code, test_env)`: object 'adae' not found
Backtrace:
    x
 1. \-falcon::make_table_35(...) at test-fda-table_35.R:12:3
 2.   \-checkmate::assert_subset(...)
 3.     \-checkmate::checkSubset(x, choices, empty.ok, fmatch)
 4.       \-checkmate:::check_subset_internal(x, choices, match)
 5.         \-checkmate::qassert(choices, "a")</error>
    </testcase>
    <testcase time="0.0210000000000008" classname="fda_table_35" name="Table_35_generation_works_with_risk_difference_column">
      <error type="error" message="Error in `eval(code, test_env)`: object 'adae' not found ('test-fda-table_35.R:44:3')">Error in `eval(code, test_env)`: object 'adae' not found
Backtrace:
    x
 1. \-falcon::make_table_35(adae, adsl, risk_diff = risk_diff) at test-fda-table_35.R:44:3
 2.   \-checkmate::assert_subset(...)
 3.     \-checkmate::checkSubset(x, choices, empty.ok, fmatch)
 4.       \-checkmate:::check_subset_internal(x, choices, match)
 5.         \-checkmate::qassert(choices, "a")</error>
    </testcase>
    <testcase time="0.0280000000000058" classname="fda_table_35" name="Table_35_generation_works_with_some_NA_values">
      <error type="error" message="Error in `eval(code, test_env)`: object 'adae' not found ('test-fda-table_35.R:52:3')">Error in `eval(code, test_env)`: object 'adae' not found</error>
    </testcase>
    <testcase time="0.0159999999999982" classname="fda_table_35" name="Table_35_generation_works_with_custom_values_SOC_variable_and_label_">
      <error type="error" message="Error in `eval(code, test_env)`: object 'adae' not found ('test-fda-table_35.R:62:3')">Error in `eval(code, test_env)`: object 'adae' not found
Backtrace:
    x
 1. \-falcon::make_table_35(...) at test-fda-table_35.R:62:3
 2.   \-checkmate::assert_subset(...)
 3.     \-checkmate::checkSubset(x, choices, empty.ok, fmatch)
 4.       \-checkmate:::check_subset_internal(x, choices, match)
 5.         \-checkmate::qassert(choices, "a")</error>
    </testcase>
  </testsuite>
</testsuites>
