---
title: Laboratory Test Results and Change from Baseline by Visit
subtitle: Roche LBT01
categories: [table, parallel-group, change from baseline] 
---

::: panel-tabset
## Table Preview

```{r}
#| label: img
#| echo: false
#| fig-align: center
#| out-width: "60%"

## If no image to show, the `Table Preview` section can be removed
knitr::include_graphics("result.png")
```

## Setup

```{r}
#| label: setup
#| message: false

# Load package and data
library(gtsummary)
library(cards)
library(dplyr)
library(crane)

adsl <- random.cdisc.data::cadsl
adlb <- random.cdisc.data::cadlb

# Filter for a specific test
adlb <- adlb |>
  dplyr::filter(
    SAFFL == "Y",
    AVISITN >= 0
  ) |>
  # retain the "WEEK *" portion of the visit
  dplyr::mutate(AVISIT = if_else(stringr::str_detect(AVISIT, "WEEK"),
    stringr::str_extract(AVISIT, "WEEK \\d+"),
    AVISIT
  ))
```



## Build Table

```{r}
#| label: tbl
#| results: hide

lbt01 <- adlb |>
  mutate(AVISIT = trimws(AVISIT)) |>
  filter(
    AVISIT %in% c("BASELINE", "WEEK 5")
  ) |>
  gtsummary::tbl_strata_nested_stack(
    strata = PARAM,
    \(.x) {
      .x |>
        # apply tbl_baseline_chg function to each level of PARAM in the data
        crane::tbl_baseline_chg(
          baseline_level = "BASELINE",
          by = "TRT01A",
          denominator = adsl
        )
    }
  ) |>
  gtsummary::modify_bold(columns = label, rows = tbl_indent_id1 > 0L) |>
  gtsummary::modify_spanning_header(gtsummary::all_stat_cols() ~ "**{level}**  \nN = {n}") |>
  gtsummary::modify_header(label = "**Lab  \n\U00A0\U00A0\U00A0\U00A0 Visit**") |>
  gtsummary::modify_source_note("Printing a few illustrative rows from the full table.")
```

```{r}
#| eval: false
#| include: false

gt::gtsave(as_gt(lbt01), filename = "result.png")
```

```{r}
#| label: img
#| echo: false
#| fig-align: center
#| out-width: "60%"
```

## Build ARD

```{r}
#| label: ard
#| message: false
#| warning: false
#| results: hide
#|
# Load package and data
library(gtsummary)

# Extract ARD from previously created gtsummary table (refer to "Build Table")
ard <- gather_ard(lbt01)

# Output ARD
ard
```

```{r}
#| echo: false

# Print ARD
withr::local_options(width = 9999)
print(ard, columns = "all")
```
:::
