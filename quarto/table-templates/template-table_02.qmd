---
title: FDA Table 2
subtitle: Baseline Demographic and Clinical Characteristics, Safety Population, Pooled Analyses
format: html
---

::: panel-tabset
## Spec. Screenshot

![](../assets/images/screenshots/table_02.png){fig-align="center"}

## gtsummary Table

<details>

<summary>gtsummary Table Setup</summary>

```{r tbl2, eval=FALSE, echo=TRUE}
# Load Libraries & Data
library(cardinal)
library(dplyr)

adsl <- random.cdisc.data::cadsl

# Pre-Processing - Add any variables needed in your table to df
adsl <- adsl %>%
  mutate(AGEGR1 = as.factor(case_when(
    AGE >= 17 & AGE < 65 ~ ">=17 to <65",
    AGE >= 65 ~ ">=65",
    AGE >= 65 & AGE < 75 ~ ">=65 to <75",
    AGE >= 75 ~ ">=75"
  )))


# Output Table
make_table_02(
  df = adsl,
  vars = c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY", "AVAL"),
  return_ard = FALSE
)
```

</details>

```{r tbl2, message=FALSE, warning=FALSE, eval=TRUE}
```

<details>

<summary>Function Details</summary>

### `make_table_02()`

------------------------------------------------------------------------

Required variables:

-   **`df`**: The variables specified by `vars`, `arm_var`, and `saffl_var`.
-   **`denominator`** (if specified): `USUBJID` and the variables specified by `arm_var` and `saffl_var`.

|  |  |  |
|----|----|----|
| **Argument** | **Description** | **Default** |
| `df` | (`data.frame`) Dataset (typically ADSL) required to build table. | *No default* |
| `return_ard` | (`flag`) Whether an ARD should be returned. | `TRUE` |
| `denominator` | (`character`) Alternative dataset used only to calculate column counts. | `NULL` |
| `arm_var` | (`character`) Arm variable used to split table into columns. | `"ARM"` |
| `saffl_var` | (`character`) Flag variable used to indicate inclusion in safety population. | `"SAFFL"` |
| `id_var` | (`character`) Identifier variable used to count the participants within each flag. | `"USUBJID"` |

Source code for this function is available [here](https://github.com/pharmaverse/cardinal/blob/main/R/fda-table_02.R).

</details>

## ARD

<details>

<summary>ARD Setup</summary>

```{r tbl1, echo=TRUE, message=FALSE, warning=FALSE, results='hide'}
# Load Libraries & Data
library(cardinal)

library(dplyr)

adsl <- random.cdisc.data::cadsl

# Pre-Processing - Add any variables needed in your table to df
adsl <- adsl %>%
  mutate(AGEGR1 = as.factor(case_when(
    AGE >= 17 & AGE < 65 ~ ">=17 to <65",
    AGE >= 65 ~ ">=65",
    AGE >= 65 & AGE < 75 ~ ">=65 to <75",
    AGE >= 75 ~ ">=75"
  )))

# Create Table & ARD
result <- make_table_02(
  df = adsl,
  vars = c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY", "AVAL")
)

# Output ARD
result$ard
```

</details>

```{r tbl1-print, echo=FALSE}
options(width = 9999)
print(result$ard, columns = "all", n = Inf)
```

## rtables Table

<details>

<summary>rtables Table Setup</summary>

```{r tbl3, eval=FALSE, echo=TRUE}
# Load Libraries & Data
# Load Libraries & Data
library(cardinal)
library(dplyr)

adsl <- random.cdisc.data::cadsl
advs <- random.cdisc.data::cadvs

# Pre-Processing - Add any variables needed in your table to df
adsl <- adsl %>%
  mutate(AGEGR1 = as.factor(case_when(
    AGE >= 17 & AGE < 65 ~ ">=17 to <65",
    AGE >= 65 ~ ">=65",
    AGE >= 65 & AGE < 75 ~ ">=65 to <75",
    AGE >= 75 ~ ">=75"
  )))

advs <- advs %>%
  filter(AVISIT == "BASELINE", VSTESTCD == "TEMP") %>%
  select("USUBJID", "AVAL")

anl <- left_join(adsl, advs, by = "USUBJID")

# Output Table
make_table_02(
  df = anl,
  vars = c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY", "AVAL"),
  lbl_vars = c(
    "Sex", "Age, years", "Age Group, years", "Race", "Ethnicity",
    "Country of Participation", "Baseline Temperature (C)"
  )
)
```

</details>

```{r tbl3, message=FALSE, warning=FALSE, eval=TRUE}
```

<details>

<summary>Function Details</summary>

### `make_table_02_rtables()`

------------------------------------------------------------------------

Required variables:

-   **`df`**: The variables specified by `vars`, `arm_var`, and `saffl_var`.
-   **`alt_counts_df`** (if specified): `USUBJID` and the variables specified by `arm_var` and `saffl_var`.

| **Argument** | **Description** | **Default** |
|:---|:---|:---|
| `df` | (`data.frame`) Dataset (typically ADSL) required to build table. | *No default* |
| `alt_counts_df` | (`character`) Alternative dataset used only to calculate column counts. | `NULL` |
| `show_colcounts` | (`flag`) Whether column counts should be printed. | `TRUE` |
| `arm_var` | (`character`) Arm variable used to split table into columns. | `"ARM"` |
| `saffl_var` | (`character`) Flag variable used to indicate inclusion in safety population. | `"SAFFL"` |
| `vars` | (`character`) Variables from `df` to include in the table. | `c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY")` |
| `lbl_vars` | (`character`) Labels corresponding to variables in `vars` to print in the table. Labels should be ordered according to the order of variables in `vars`. | `formatters::var_labels(df, fill = TRUE)[vars]` |
| `lbl_overall` | (`character`) If specified, an overall column will be added to the table with the given value as the column label. | `"Total Population"` |
| `.stats` | (`character`) Statistics to include in the table. Includes statistics for all variable types (only the statistics that are valid for a given variable's type will be printed). See [`tern::analyze_vars()`](https://insightsengineering.github.io/tern/main/reference/analyze_variables.html#value) for options. | `c("mean_sd", "median_range", "count_fraction")` |
| `.formats` | (named `list` of `character`) List of formats corresponding to each value in `.stats`. Each name is a value in `.stats` and the corresponding value is the format that should be applied to that statistic. See [`formatters::list_valid_format_labels()`](https://insightsengineering.github.io/formatters/main/reference/list_valid_format_labels.html#ref-examples) for a list of valid formats. | `NULL` |
| `prune_0` | (`flag`) Whether all-zero rows should be removed from the table. | `TRUE` |
| `na_rm` | (`flag`) Whether `NA` levels should be removed from the table. | `FALSE` |
| `annotations` | (named `list` of `character`) List of annotations to add to the table. Valid annotation types are `title`, `subtitles`, `main_footer`, and `prov_footer.` Each name-value pair should use the annotation type as name and the desired string as value. | `NULL` |

Source code for this function is available [here](https://github.com/pharmaverse/cardinal/blob/main/R/fda-table_02.R#L117).

</details>
:::
