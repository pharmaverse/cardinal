---
title: FDA Table 2
subtitle: Baseline Demographic and Clinical Characteristics, Safety Population, Pooled Analyses
format: html
---

::: panel-tabset
## Spec. Screenshot

![](../assets/images/screenshots/table_02.png){fig-align="center"}

## Standard Table

```{r tbl, message=FALSE, warning=FALSE}
# Load Libraries & Data
library(scda)
library(falcon)
library(dplyr)

adsl <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
advs <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "advs")

# Pre-Processing - Add any variables needed in your table to df
adsl <- adsl %>%
  dplyr::mutate(AGEGR1 = as.factor(dplyr::case_when(
    AGE >= 17 & AGE < 65 ~ ">=17 to <65",
    AGE >= 65 ~ ">=65",
    AGE >= 65 & AGE < 75 ~ ">=65 to <75",
    AGE >= 75 ~ ">=75"
  )))

advs <- advs %>%
  dplyr::filter(AVISIT == "BASELINE", VSTESTCD == "TEMP") %>%
  dplyr::select("USUBJID", "AVAL")

anl <- dplyr::left_join(adsl, advs, by = "USUBJID")

# Output Table
make_table_02(
  df = anl,
  vars = c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY", "AVAL"),
  lbl_vars = c(
    "Sex", "Age, years", "Age Group, years", "Race", "Ethnicity",
    "Country of Participation", "Baseline Temperature (C)"
  )
)
```

## Standard Table Setup

```{r tbl, eval=FALSE, echo=TRUE}
```

## Function Details: `make_table_02`

### `make_table_02()`

------------------------------------------------------------------------

Required variables:

-   **`df`**: `SAFFL` and the variables specified by `vars` and `arm_var`.
-   **`alt_counts_df`** (if specified): `SAFFL`, `USUBJID`, and the variable specified by `arm_var`.

| Argument         | Description                                                                                                                                                                                                                                                                                                                                                                                         | Default                                                  |
|:-----------------|:------------------------------------|:-----------------|
| `df`             | (`data.frame`) Dataset (typically ADSL) required to build table.                                                                                                                                                                                                                                                                                                                                    | *No default*                                             |
| `alt_counts_df`  | (`character`) Alternative dataset used only to calculate column counts.                                                                                                                                                                                                                                                                                                                             | `NULL`                                                   |
| `show_colcounts` | (`flag`) Whether column counts should be printed.                                                                                                                                                                                                                                                                                                                                                   | `TRUE`                                                   |
| `arm_var`        | (`character`) Arm variable used to split table into columns.                                                                                                                                                                                                                                                                                                                                        | `"ARM"`                                                  |
| `vars`           | (`character`) Variables from `df` to include in the table.                                                                                                                                                                                                                                                                                                                                          | `c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY")` |
| `lbl_vars`       | (`character`) Labels corresponding to variables in `vars` to print in the table. Labels should be ordered according to the order of variables in `vars`.                                                                                                                                                                                                                                            | `formatters::var_labels(df, fill = TRUE)[vars]`          |
| `lbl_overall`    | (`character`) If specified, an overall column will be added to the table with the given value as the column label.                                                                                                                                                                                                                                                                                  | `"Total Population"`                                     |
| `.stats`         | (`character`) Statistics to include in the table. Includes statistics for all variable types (only the statistics that are valid for a given variable's type will be printed). See [`tern::summarize_vars()`](https://insightsengineering.github.io/tern/main/reference/summarize_variables.html#value) for options.                                                                                | `c("mean_sd", "median_range", "count_fraction")`         |
| `.formats`       | (named `list` of `character`) List of formats corresponding to each value in `.stats`. Each name is a value in `.stats` and the corresponding value is the format that should be applied to that statistic. See [`formatters::list_valid_format_labels()`](https://insightsengineering.github.io/formatters/main/reference/list_valid_format_labels.html#ref-examples) for a list of valid formats. | `NULL`                                                   |
| `prune_0`        | (`flag`) Whether all-zero rows should be removed from the table.                                                                                                                                                                                                                                                                                                                                    | `TRUE`                                                   |
| `na_rm`          | (`flag`) Whether `NA` levels should be removed from the table.                                                                                                                                                                                                                                                                                                                                      | `FALSE`                                                  |
| `annotations`    | (named `list` of `character`) List of annotations to add to the table. Valid annotation types are `title`, `subtitles`, `main_footer`, and `prov_footer.` Each name-value pair should use the annotation type as name and the desired string as value.                                                                                                                                              | `NULL`                                                   |

Source code for this function is available [here](https://github.com/pharmaverse/falcon/blob/682cb17b65d88240dba0525483c09cc514707997/R/fda-table_02.R#L33).

## Tplyr Table

```{r tbl_tplyr, message=FALSE, warning=FALSE}
# Load Libraries & Data
library(scda)
library(falcon)
library(dplyr)

adsl <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
advs <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "advs")

# Pre-Processing - Add any variables needed in your table to df
adsl <- adsl %>%
  dplyr::mutate(AGEGR1 = as.factor(dplyr::case_when(
    AGE >= 17 & AGE < 65 ~ ">=17 to <65",
    AGE >= 65 ~ ">=65",
    AGE >= 65 & AGE < 75 ~ ">=65 to <75",
    AGE >= 75 ~ ">=75"
  )))

advs <- advs %>%
  dplyr::filter(AVISIT == "BASELINE", VSTESTCD == "TEMP") %>%
  dplyr::select("USUBJID", "AVAL")

anl <- dplyr::left_join(adsl, advs, by = "USUBJID")

# Output Table
make_table_02_tplyr(
  df = anl,
  vars = c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY", "AVAL"),
  lbl_vars = c(
    "Sex", "Age, years", "Age Group, years", "Race", "Ethnicity",
    "Country of Participation", "Baseline Temperature (C)"
  )
)
```

## Tplyr Table Setup

```{r tbl_tplyr, eval=FALSE, echo=TRUE}
```

## Function Details: `make_table_02_tplyr`

### `make_table_02_tplyr()`

------------------------------------------------------------------------

Required variables:

-   **`df`**: `SAFFL` and the variables specified by `vars` and `arm_var`.
-   **`alt_counts_df`** (if specified and `tplyr_raw = FALSE`): `SAFFL`, `USUBJID`, and the variable specified by `arm_var`.

| Argument         | Description                                                                                                                                                                                                             | Default                                                  |
|:-----------------|:-----------------------------------|:-----------------|
| `df`             | (`data.frame`) Dataset (typically ADSL) required to build table.                                                                                                                                                        | *No default*                                             |
| `alt_counts_df`  | (`character`) Alternative dataset used only to calculate column counts.                                                                                                                                                 | `NULL`                                                   |
| `show_colcounts` | (`flag`) Whether column counts should be printed.                                                                                                                                                                       | `TRUE`                                                   |
| `arm_var`        | (`character`) Arm variable used to split table into columns.                                                                                                                                                            | `"ARM"`                                                  |
| `vars`           | (`character`) Variables from `df` to include in the table.                                                                                                                                                              | `c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY")` |
| `lbl_vars`       | (`character`) Labels corresponding to variables in `vars` to print in the table. Labels should be ordered according to the order of variables in `vars`.                                                                | `formatters::var_labels(df, fill = TRUE)[vars]`          |
| `lbl_overall`    | (`character`) If specified, an overall column will be added to the table with the given value as the column label.                                                                                                      | `"Total Population"`                                     |
| `prune_0`        | (`flag`) Whether all-zero rows should be removed from the table.                                                                                                                                                        | `TRUE`                                                   |
| `na_rm`          | (`flag`) Whether `NA` levels should be removed from the table.                                                                                                                                                          | `FALSE`                                                  |
| `annotations`    | (named `list` of `character`) List of annotations to add to the table. Valid annotation types are `title` and `subtitles.` Each name-value pair should use the annotation type as name and the desired string as value. | `NULL`                                                   |
| `tplyr_raw`      | (`flag`) Whether the raw `tibble` created using `Tplyr` functions should be returned, or the table formatted using functions from `tfrmt` should be returned (default).                                                 | `FALSE`                                                  |

Source code for this function is available [here](https://github.com/pharmaverse/falcon/blob/682cb17b65d88240dba0525483c09cc514707997/R/fda-table_02.R#L101).

## gt Table

```{r tbl_gt, message=FALSE, warning=FALSE}
# Load Libraries & Data
library(scda)
library(falcon)
library(dplyr)

adsl <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
advs <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "advs")

# Pre-Processing - Add any variables needed in your table to df
adsl <- adsl %>%
  dplyr::mutate(AGEGR1 = as.factor(dplyr::case_when(
    AGE >= 17 & AGE < 65 ~ ">=17 to <65",
    AGE >= 65 ~ ">=65",
    AGE >= 65 & AGE < 75 ~ ">=65 to <75",
    AGE >= 75 ~ ">=75"
  )))

advs <- advs %>%
  dplyr::filter(AVISIT == "BASELINE", VSTESTCD == "TEMP") %>%
  dplyr::select("USUBJID", "AVAL")

anl <- dplyr::left_join(adsl, advs, by = "USUBJID")

# Output Table
make_table_02_gt(
  df = anl,
  vars = c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY", "AVAL"),
  lbl_vars = c(
    "Sex", "Age, years", "Age Group, years", "Race", "Ethnicity",
    "Country of Participation", "Baseline Temperature (C)"
  )
)
```

## gt Table Setup

```{r tbl_gt, eval=FALSE, echo=TRUE}
```

## Function Details: `make_table_02_gt`

### `make_table_02_gt()`

------------------------------------------------------------------------

Required variables:

-   **`df`**: `SAFFL` and the variables specified by `vars` and `arm_var`.
-   **`alt_counts_df`** (if specified and `tplyr_raw = FALSE`): `SAFFL`, `USUBJID`, and the variable specified by `arm_var`.

| Argument         | Description                                                                                                                                              | Default                                                  |
|:-----------------|:-----------------------------------|:-----------------|
| `df`             | (`data.frame`) Dataset (typically ADSL) required to build table.                                                                                         | *No default*                                             |
| `alt_counts_df`  | (`character`) Alternative dataset used only to calculate column counts.                                                                                  | `NULL`                                                   |
| `show_colcounts` | (`flag`) Whether column counts should be printed.                                                                                                        | `TRUE`                                                   |
| `arm_var`        | (`character`) Arm variable used to split table into columns.                                                                                             | `"ARM"`                                                  |
| `vars`           | (`character`) Variables from `df` to include in the table.                                                                                               | `c("SEX", "AGE", "AGEGR1", "RACE", "ETHNIC", "COUNTRY")` |
| `lbl_vars`       | (`character`) Labels corresponding to variables in `vars` to print in the table. Labels should be ordered according to the order of variables in `vars`. | `formatters::var_labels(df, fill = TRUE)[vars]`          |
| `lbl_overall`    | (`character`) If specified, an overall column will be added to the table with the given value as the column label.                                       | `"Total Population"`                                     |

Source code for this function is available [here](https://github.com/pharmaverse/falcon/blob/682cb17b65d88240dba0525483c09cc514707997/R/fda-table_02.R#L252). 

:::
