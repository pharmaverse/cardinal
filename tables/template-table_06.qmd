---
title: "FDA Table 6"
subtitle: "Overview of Adverse Events, Safety Population, Pooled Analyses"
format: html
--- 

::: panel-tabset
## Spec Screenshot

![](images/table_06.png){fig-align="center"}

## Table

```{r, message=FALSE, warning=FALSE, echo=FALSE}
library(scda)
library(falcon)

adsl <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
adae <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adae")

make_table_06(adae = adae, alt_counts_df = adsl)
```

## Table Setup

```{r, eval=FALSE}
#| code-fold: show

# Load Libraries & Data
library(scda)
library(falcon)

adsl <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
adae <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adae")

# Output Table
make_table_06(adae = adae, alt_counts_df = adsl)
```

## Function Details

### `make_table_06()`

| Argument         | Description                                                                                  | Default      |
|:-----------------|:---------------------------------------------------------------------------------------------|:-------------|
| `adae`           | (`data.frame`) Data (typically ADAE) required to build table.                                | _No Default_ |
| `alt_counts_df`  | (`character`) Alternative (full) data (typically ADSL) used only to calculate column counts. | `NULL`       |
| `show_colcounts` | (`flag`) Whether column counts should be printed.                                            | `TRUE`       |
| `arm_var`        | (`character`) Arm variable used to split table into columns.                                 | `"ARM"`      |
| `lbl_overall`    | (`character`) If specified, an overall column will be added to the table with the given value as the column label. | `NULL` |
| `prune_0`        | (`flag`) Whether all-zero rows should be removed from the table. | `FALSE` |
| `annotations`    | (named `list` of `character`) List of annotations to add to the table. Valid annotations types are `title`, `subtitles`, `main_footer`, and `prov_footer.` Each name-value pair should use the annotation type as name and the desired string as value. | `NULL` |

:::
