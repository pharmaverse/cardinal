---
title: "FDA Table 6"
subtitle: "Overview of Adverse Events, Safety Population, Pooled Analyses"
format: html
--- 

::: panel-tabset
## Spec Screenshot

![](images/table_06.png){fig-align="center"}

## Table Setup

```{r, message=FALSE, warning=FALSE}
#| code-fold: show

# Load Libraries & Data
library(scda)
library(falcon)

adsl <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
adae <- scda::synthetic_cdisc_dataset("rcd_2022_10_13", "adae")
```

## Table Function

### `make_table_06()`

| Argument         | Description                                                                                  | Default      |
|:-----------------|:---------------------------------------------------------------------------------------------|:-------------|
| `adae`           | (`data.frame`) Data (typically ADAE) required to build table.                                | _No Default_ |
| `alt_counts_df`  | (`character`) Alternative (full) data (typically ADSL) used only to calculate column counts. | `NULL`       |
| `show_colcounts` | (`flag`) Whether column counts should be printed.                                            | `TRUE`       |
| `arm_var`        | (`character`) Arm variable used to split table into columns.                                 | `"ARM"`      |
| `lbl_overall`    | (`character`) If specified, an overall column will be added to the table with the given value as the column label. | `NULL` |
| `prune_0`        | (`flag`) Whether all-zero rows should be removed from the table. | `FALSE` |
| `annotations`    | (named `list` of `character`) List of annotations to add to the table. Valid annotations types are `title`, `subtitles`, `main_footer`, and `prov_footer.` Each name-value pair should use the annotation type as name and the desired string as value. | `NULL` |

## Table

```{r}
make_table_06(adae = adae, alt_counts_df = adsl)
```

## Shiny Module

# ```{r}
# #| context: data
# adae <- adae
# ```
# 
# ```{r}
# #| panel: sidebar
# 
# selectInput("arm", "Arm Variable:",
#   choices = names(adae),
#   selected = "ARM"
# )
# checkboxInput("show_colcounts", "Show column counts", value = TRUE)
# checkboxInput("overall_col", "Include Overall column", value = FALSE)
# checkboxInput("prune_0", "Remove all-zero rows", value = TRUE)
# textInput("title", "Table Title:", placeholder = "title")
# textInput("subtitles", "Table Subtitles (separate multiple with ;):", placeholder = "subtitle")
# textInput("main_footer", "Table Main Footers (separate multiple with ;):", placeholder = "main footer")
# textInput("prov_footer", "Table Providence Footers (separate multiple with ;):", placeholder = "prov. footer")
# ```
# 
# ```{r}
# #| panel: fill
# htmlOutput("table")
# ```
# 
# ```{r}
# #| context: server
# output$table <- renderUI({
#   as_html(
#     make_table_06(
#       adae = adae,
#       show_colcounts = input$show_colcounts,
#       arm_var = input$arm,
#       lbl_overall = if (input$overall_col) "Total Population" else NULL,
#       prune_0 = input$prune_0,
#       annotations = list(
#         title = if (nchar(input$title) > 0) input$title else NULL,
#         subtitles = if (nchar(input$subtitles) > 0) strsplit(input$subtitles, ";")[[1]] else NULL,
#         main_footer = if (nchar(input$main_footer) > 0) strsplit(input$main_footer, ";")[[1]] else NULL,
#         prov_footer = if (nchar(input$prov_footer) > 0) strsplit(input$prov_footer, ";")[[1]] else NULL
#       )
#     )
#   )
# })
# ```

:::
